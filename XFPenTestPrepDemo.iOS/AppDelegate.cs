using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using Foundation;
using UIKit;

namespace XFPenTestPrepDemo.iOS
{
    // The UIApplicationDelegate for the application. This class is responsible for launching the 
    // User Interface of the application, as well as listening (and optionally responding) to 
    // application events from iOS.
    [Register("AppDelegate")]
    public partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate
    {
        //
        // This method is invoked when the application has loaded and is ready to run. In this 
        // method you should instantiate the window, load the UI into it and then make the window
        // visible.
        //
        // You have 17 seconds to return from this method, or iOS will terminate your application.
        //
        public override bool FinishedLaunching(UIApplication app, NSDictionary options)
        {
            global::Xamarin.Forms.Forms.Init();
            LoadApplication(new App());

            //// due to a bug on mono: https://github.com/mono/mono/issues/17125
            //// we need to use ServerCertificateCustomValidationCallback override for the ServicePointManager
            //ServicePointManager.ServerCertificateValidationCallback =
            //    (message, certificate, chain, sslPolicyErrors) =>
            //    {
            //        return true;
            //    };

            var iosClientHandler = new NSUrlSessionHandler();
            App.HttpClientHandler = iosClientHandler;

            return base.FinishedLaunching(app, options);
        }
    }
}
